name: üîç Check Server Status NOW

on:
  workflow_dispatch:

env:
  VPS_HOST: 104.168.159.24
  VPS_PORT: 57411
  VPS_USER: deploy
  DEPLOY_PATH: /opt/lanet-helpdesk

jobs:
  check-server:
    runs-on: ubuntu-latest
    name: üîç Check Server Status Immediately
    
    steps:
    - name: üîê Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        ssh-keyscan -p ${{ env.VPS_PORT }} ${{ env.VPS_HOST }} >> ~/.ssh/known_hosts
        
    - name: üîç Check Server Status RIGHT NOW
      run: |
        ssh -i ~/.ssh/id_ed25519 -p ${{ env.VPS_PORT }} ${{ env.VPS_USER }}@${{ env.VPS_HOST }} << 'EOF'
          set -e
          
          echo "üîç SERVIDOR STATUS - $(date)"
          echo "=================================="
          
          cd /opt/lanet-helpdesk
          
          echo "üê≥ CONTENEDORES DOCKER:"
          sudo docker ps -a
          
          echo ""
          echo "üåê PUERTOS ABIERTOS:"
          sudo netstat -tlnp | grep -E "(80|443|5001|5432|6379)"
          
          echo ""
          echo "üîç NGINX STATUS:"
          sudo docker logs lanet-helpdesk-frontend --tail=20 2>&1 || echo "No nginx logs"
          
          echo ""
          echo "üîç BACKEND STATUS:"
          sudo docker logs lanet-helpdesk-backend --tail=20 2>&1 || echo "No backend logs"
          
          echo ""
          echo "üîç POSTGRESQL STATUS:"
          sudo docker logs lanet-helpdesk-db --tail=10 2>&1 || echo "No postgres logs"
          
          echo ""
          echo "üîç TEST CONEXI√ìN LOCAL:"
          curl -I http://localhost 2>&1 || echo "Localhost no responde"
          curl -I http://localhost:80 2>&1 || echo "Puerto 80 no responde"
          
          echo ""
          echo "üîç PROCESOS NGINX:"
          sudo docker exec lanet-helpdesk-frontend ps aux 2>&1 || echo "No nginx processes"
          
          echo ""
          echo "üîç CONFIGURACI√ìN NGINX:"
          sudo docker exec lanet-helpdesk-frontend nginx -t 2>&1 || echo "Nginx config error"
          
        EOF
