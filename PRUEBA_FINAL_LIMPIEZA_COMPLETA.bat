@echo off
echo ========================================
echo üî• PRUEBA FINAL - LIMPIEZA COMPLETA üî•
echo ========================================
echo.
echo ESTA ES LA PRUEBA DEFINITIVA DEL AGENTE LANET
echo.
echo LO QUE HAR√Å ESTE SCRIPT:
echo   üóëÔ∏è  ELIMINAR completamente el agente del equipo
echo   üóëÔ∏è  LIMPIAR toda la base de datos (assets, tokens, heartbeats)
echo   üóëÔ∏è  PREPARAR el sistema para instalaci√≥n desde CERO
echo   üöÄ  INSTALAR la versi√≥n final del agente
echo   ‚úÖ  VERIFICAR que todo funcione perfectamente
echo.
echo ========================================

REM Verificar permisos de administrador
net session >nul 2>&1
if %errorLevel% == 0 (
    echo ‚úÖ Ejecutando como administrador
) else (
    echo ‚ùå ERROR: Ejecutar como administrador
    echo   Clic derecho -> "Ejecutar como administrador"
    pause
    exit /b 1
)

echo.
echo ‚ö†Ô∏è  ADVERTENCIA: Esta operaci√≥n es IRREVERSIBLE
echo.
echo ELIMINAR√Å:
echo   - Agente LANET instalado en este equipo
echo   - TODOS los assets de la base de datos
echo   - TODOS los tokens de agentes
echo   - TODOS los heartbeats registrados
echo   - TODO el historial de agentes
echo.
set /p confirm="¬øContinuar con la limpieza completa? (s/n): "
if /i not "%confirm%"=="s" (
    echo ‚ùå Operaci√≥n cancelada
    pause
    exit /b 0
)

echo.
echo üõë PASO 1: DETENER Y ELIMINAR AGENTE LOCAL
echo ========================================

echo Deteniendo servicio del agente...
sc stop LANETAgent 2>nul
timeout /t 5 /nobreak >nul

echo Eliminando servicio del agente...
sc delete LANETAgent 2>nul

echo Terminando procesos del agente...
taskkill /f /im "LANET_Agent.exe" 2>nul
taskkill /f /im "python.exe" /fi "WINDOWTITLE eq LANET*" 2>nul
timeout /t 3 /nobreak >nul

echo Eliminando archivos del agente...
rmdir /s /q "C:\Program Files\LANET Agent" 2>nul

echo Limpiando registro...
reg delete "HKLM\SOFTWARE\LANET" /f 2>nul
reg delete "HKLM\SYSTEM\CurrentControlSet\Services\LANETAgent" /f 2>nul

echo ‚úÖ Agente local eliminado completamente

echo.
echo üóëÔ∏è  PASO 2: LIMPIAR BASE DE DATOS COMPLETA
echo ========================================

echo Conectando a PostgreSQL...
echo Eliminando TODOS los datos de agentes...

psql -U postgres -d lanet_helpdesk -c "
-- Eliminar en orden correcto para evitar errores de llaves for√°neas
DELETE FROM agent_token_usage_history;
DELETE FROM asset_heartbeats;
DELETE FROM assets;
DELETE FROM agent_installation_tokens;

-- Resetear secuencias
SELECT setval(pg_get_serial_sequence('assets', 'id'), 1, false);
SELECT setval(pg_get_serial_sequence('agent_installation_tokens', 'id'), 1, false);

-- Verificar limpieza
SELECT 'LIMPIEZA COMPLETADA - CONTEOS FINALES:' as resultado;
SELECT 'Assets:' as tabla, COUNT(*) as cantidad FROM assets
UNION ALL
SELECT 'Tokens:' as tabla, COUNT(*) as cantidad FROM agent_installation_tokens
UNION ALL
SELECT 'Heartbeats:' as tabla, COUNT(*) as cantidad FROM asset_heartbeats
UNION ALL
SELECT 'Token Usage:' as tabla, COUNT(*) as cantidad FROM agent_token_usage_history;
"

if %errorLevel% == 0 (
    echo ‚úÖ Base de datos limpiada exitosamente
) else (
    echo ‚ùå Error limpiando base de datos
    echo   Verifica que PostgreSQL est√© ejecut√°ndose
    echo   Usuario: postgres, Contrase√±a: Poikl55+*
    pause
    exit /b 1
)

echo.
echo üîç PASO 3: VERIFICAR BACKEND FUNCIONANDO
echo ========================================

echo Verificando que el backend est√© ejecut√°ndose...
netstat -ano | findstr :5001 >nul
if %errorLevel% == 0 (
    echo ‚úÖ Backend ejecut√°ndose en puerto 5001
) else (
    echo ‚ùå ERROR: Backend no detectado en puerto 5001
    echo.
    echo INSTRUCCIONES:
    echo   1. Abrir nueva terminal en: C:\lanet-helpdesk-v3
    echo   2. Ejecutar: python backend/app.py
    echo   3. Esperar a que inicie en puerto 5001
    echo   4. Volver a ejecutar este script
    echo.
    pause
    exit /b 1
)

echo.
echo üì¶ PASO 4: INSTALAR AGENTE VERSI√ìN FINAL
echo ========================================

echo INSTALADOR FINAL:
echo   Ubicaci√≥n: C:\lanet-helpdesk-v3\production_installer\deployment\LANET_Agent_Installer.exe
echo   Versi√≥n: 12:51:08 (2025-08-04)
echo   Caracter√≠sticas: TODAS las funciones implementadas
echo.

if exist "C:\lanet-helpdesk-v3\production_installer\deployment\LANET_Agent_Installer.exe" (
    echo ‚úÖ Instalador encontrado
    echo.
    
    REM Generar token √∫nico para esta prueba final
    for /f %%i in ('powershell -command "Get-Random"') do set RANDOM_NUM=%%i
    set FINAL_TOKEN=LANET-FINAL-TEST-%RANDOM_NUM%
    
    echo üé´ TOKEN PARA PRUEBA FINAL: %FINAL_TOKEN%
    echo.
    echo üéØ INSTRUCCIONES IMPORTANTES:
    echo   1. Se abrir√° el instalador profesional
    echo   2. Usar EXACTAMENTE este token: %FINAL_TOKEN%
    echo   3. Completar la instalaci√≥n
    echo   4. Verificar que se registre correctamente
    echo.
    echo ‚è∞ PRESIONA ENTER cuando est√©s listo para instalar...
    pause >nul
    
    start /wait "" "C:\lanet-helpdesk-v3\production_installer\deployment\LANET_Agent_Installer.exe"
    
    echo.
    echo üîç PASO 5: VERIFICACI√ìN POST-INSTALACI√ìN
    echo ========================================
    
    timeout /t 5 /nobreak >nul
    
    echo Verificando servicio instalado...
    sc query LANETAgent >nul 2>&1
    if %errorLevel% == 0 (
        echo ‚úÖ Servicio LANETAgent instalado correctamente
        
        echo.
        echo üìã Estado del servicio:
        sc query LANETAgent | findstr "STATE"
        
        echo.
        echo üîç Verificando registro en base de datos...
        
        psql -U postgres -d lanet_helpdesk -c "
        SELECT 
            'ASSET REGISTRADO:' as resultado,
            id,
            asset_id,
            hostname,
            client_id,
            site_id,
            created_at
        FROM assets 
        ORDER BY created_at DESC 
        LIMIT 1;
        "
        
        echo.
        echo üîç Verificando token usado...
        
        psql -U postgres -d lanet_helpdesk -c "
        SELECT 
            'TOKEN USADO:' as resultado,
            id,
            token_value,
            client_code,
            site_code,
            is_used,
            created_at
        FROM agent_installation_tokens 
        WHERE token_value LIKE 'LANET-FINAL-TEST-%'
        ORDER BY created_at DESC 
        LIMIT 1;
        "
        
        echo.
        echo ‚è±Ô∏è  PASO 6: ESPERAR PRIMER HEARTBEAT (90 segundos)
        echo ========================================
        echo   El agente deber√≠a enviar su primer heartbeat pronto...
        echo   Heartbeat completo con TODOS los inventarios...
        
        timeout /t 90 /nobreak >nul
        
        echo.
        echo üîç VERIFICANDO PRIMER HEARTBEAT...
        
        psql -U postgres -d lanet_helpdesk -c "
        SELECT 
            'HEARTBEATS RECIBIDOS:' as resultado,
            asset_id,
            created_at,
            status,
            cpu_usage,
            memory_usage,
            EXTRACT(EPOCH FROM (NOW() - created_at))/60 as minutes_ago
        FROM asset_heartbeats 
        ORDER BY created_at DESC 
        LIMIT 3;
        "
        
        echo.
        echo üìã VERIFICANDO LOGS DEL AGENTE...
        if exist "C:\Program Files\LANET Agent\logs\agent.log" (
            echo.
            echo LOGS RECIENTES (√öLTIMAS 15 L√çNEAS):
            echo ----------------------------------------
            powershell -Command "Get-Content 'C:\Program Files\LANET Agent\logs\agent.log' -Tail 15"
            echo ----------------------------------------
        ) else (
            echo ‚ö†Ô∏è  Logs no encontrados a√∫n
        )
        
        echo.
        echo üåê VERIFICAR DASHBOARD
        echo ========================================
        echo   URL: http://localhost:5173
        echo   Buscar el nuevo asset registrado
        echo   Verificar que muestre "Hace menos de 5 minutos"
        echo   Revisar TODAS las pesta√±as:
        echo     ‚úÖ General: Informaci√≥n b√°sica
        echo     ‚úÖ Hardware: Sistema, Memoria, Almacenamiento, Dominio
        echo     ‚úÖ Software: Programas instalados
        echo     ‚úÖ M√©tricas: CPU, Memoria, Disco (%)
        echo     ‚úÖ BitLocker: Estado de encriptaci√≥n
        echo.
        
        echo ‚è∞ MONITOREO CONTINUO
        echo ========================================
        echo   Esperar 5 minutos m√°s para el segundo heartbeat
        echo   Si llega correctamente: ¬°PRUEBA FINAL EXITOSA!
        echo.
        echo üéØ RESULTADO ESPERADO:
        echo   ‚úÖ Heartbeats cada 5 minutos
        echo   ‚úÖ Inventario completo (Hardware, Software, BitLocker, SMART)
        echo   ‚úÖ M√©tricas en tiempo real
        echo   ‚úÖ Dashboard actualizado
        echo   ‚úÖ Dominio/Grupo de trabajo detectado
        echo   ‚úÖ Espacio usado del disco mostrado
        
    ) else (
        echo ‚ùå Error: Servicio no se instal√≥ correctamente
        echo.
        echo POSIBLES CAUSAS:
        echo   - Instalaci√≥n cancelada por el usuario
        echo   - Error en el token de instalaci√≥n
        echo   - Problemas de permisos
        echo.
        pause
        exit /b 1
    )
    
) else (
    echo ‚ùå ERROR: Instalador final no encontrado
    echo.
    echo UBICACI√ìN ESPERADA:
    echo   C:\lanet-helpdesk-v3\production_installer\deployment\LANET_Agent_Installer.exe
    echo.
    echo SOLUCI√ìN:
    echo   1. Verificar que el archivo existe
    echo   2. Recompilar si es necesario: python production_installer\compilers\compile_agent.py
    echo.
    pause
    exit /b 1
)

echo.
echo ========================================
echo üéâ PRUEBA FINAL COMPLETADA
echo ========================================
echo.
echo TOKEN USADO: %FINAL_TOKEN%
echo.
echo VERIFICACIONES REALIZADAS:
echo   ‚úÖ Limpieza completa de base de datos
echo   ‚úÖ Eliminaci√≥n completa del agente anterior
echo   ‚úÖ Instalaci√≥n desde cero
echo   ‚úÖ Registro autom√°tico con token nuevo
echo   ‚úÖ Primer heartbeat verificado
echo   ‚úÖ Logs del agente revisados
echo.
echo PR√ìXIMOS PASOS:
echo   üåê Revisar dashboard: http://localhost:5173
echo   üìä Verificar todas las pesta√±as del asset
echo   ‚è∞ Monitorear heartbeats cada 5 minutos
echo   üîç Confirmar que TODAS las funciones trabajen
echo.
echo SI TODO FUNCIONA CORRECTAMENTE:
echo   üèÜ ¬°AGENTE LANET COMPLETAMENTE FUNCIONAL!
echo   üöÄ Listo para despliegue en producci√≥n
echo   üìã Documentaci√≥n completa disponible
echo.
echo ========================================

pause
